{
  "permissions": {
    "allow": [
      "Bash(python -c:*)",
      "Bash(where:*)",
      "Bash(python:*)",
      "Bash(CHECK_KIWOOM_STATUS.bat)",
      "Bash(if [ -d \"/c/Program Files (x86)/Kiwoom/OpenAPI+\" ])",
      "Bash(then echo \"Open API Î™®Îìà: ÏûàÏùå\")",
      "Bash(else echo \"Open API Î™®Îìà: ÏóÜÏùå\")",
      "Bash(fi)",
      "Bash(if [ -d \"/c/Python310-32\" ])",
      "Bash(then echo \"Python 32-bit: ÏûàÏùå\")",
      "Bash(else echo \"Python 32-bit: ÏóÜÏùå\")",
      "Read(//c/Program Files (x86)/**)",
      "Read(//c/Users/chung/Downloads//**)",
      "Bash(powershell -Command \"Start-Process ''C:\\Users\\chung\\Downloads\\OpenAPISetup (2).exe'' -Verb RunAs\")",
      "Read(//c/**)",
      "Bash(C:/Python310-32/python.exe:*)",
      "Bash(timeout 30 C:/Python310-32/python.exe:*)",
      "Bash(reg query \"HKEY_CLASSES_ROOT\\KHOPENAPI.KHOpenAPICtrl.1\")",
      "Bash(timeout 20 C:/Python310-32/python.exe:*)",
      "Bash(powershell -Command:*)",
      "Bash(if [ -f \"/c/Program Files (x86)/Kiwoom/OpenAPI+/KHOpenAPI.ocx\" ])",
      "Bash(then echo \"[OK] Open API+ Î™®Îìà ÏÑ§Ïπò ÌôïÏù∏!\")",
      "Bash(ls:*)",
      "Bash(else echo \"[X] ÏïÑÏßÅ ÏÑ§Ïπò Ïïà Îê®\")",
      "Bash(reg query \"HKEY_CLASSES_ROOT\\KHOPENAPI.KHOpenAPICtrl.1\\CLSID\")",
      "Bash(reg query \"HKEY_CLASSES_ROOT\\CLSID\\{A1574A0D-6BFA-4BD7-9020-DED88711818D}\\InprocServer32\")",
      "Bash(if [ -f \"/c/OpenAPI/khopenapi.ocx\" ])",
      "Bash(git add:*)",
      "Bash(git log:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nClean up Kiwoom API related code and documentation\n\n- Remove all Kiwoom API integration files and documentation\n- Delete data collection scripts and mock data generators\n- Clean up configuration files (.env)\n- Keep web application intact\n- Reset project to clean state for fresh start\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd real-time market news analysis feature\n\n- Implement news collection from NewsAPI and Alpha Vantage\n- Add AI-powered news impact analysis using Claude API\n- Create importance rating system (1-5 stars)\n- Identify affected stocks and sectors automatically\n- Add beautiful news page with filtering and real-time updates\n- Integrate news section into main navigation\n- Update environment variables and dependencies\n\nFeatures:\n- Real-time news collection from multiple sources\n- AI analysis of market impact and sentiment\n- Star-based importance rating (5 stars = critical, 1 star = minor)\n- Automatic stock/sector correlation\n- Key points extraction\n- Time sensitivity classification\n- Beautiful responsive UI with gradients and animations\n\nü§ñ Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(pip install:*)",
      "Bash(git commit:*)",
      "Bash(timeout 300 python:*)",
      "Bash(curl:*)",
      "Bash(timeout 600 python:*)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(Get-Process python -ErrorAction SilentlyContinue)",
      "Bash(Stop-Process -Force)",
      "Bash(taskkill:*)",
      "Bash(find:*)",
      "Bash(git reset:*)",
      "Bash(timeout 30 python:*)",
      "Bash(timeout 60 python:*)",
      "Bash(set:*)",
      "Bash(export PYTHONIOENCODING=utf-8)"
    ],
    "deny": [],
    "ask": []
  }
}
